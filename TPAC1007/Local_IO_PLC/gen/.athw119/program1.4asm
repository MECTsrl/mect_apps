

.prg program1
    clssid 0
    var    bool first:=true
    var    ton timer
    var    bool flip:=true
    bp              0   ;"(10,8)"
    stmtbeg         2   ;"(10,8)"
    bp              3   ;"(12,2)"
    PSHD_IN_1       first
    jmpcn           @L1  ;to end_if
        bp              4   ;"(14,16)"
        PSHC_01_1
        POPD_GX_1       plc_digdir_1

        bp              5   ;"(15,16)"
        PSHC_01_1
        POPD_GX_1       plc_digdir_2

        bp              6   ;"(16,16)"
        PSHC_01_1
        POPD_GX_1       plc_digdir_3

        bp              7   ;"(17,16)"
        PSHC_01_1
        POPD_GX_1       plc_digdir_4

        bp              8   ;"(18,16)"
        PSHC_00_1
        POPD_GX_1       plc_digdir_5

        bp              9   ;"(19,16)"
        PSHC_00_1
        POPD_GX_1       plc_digdir_6

        bp              10   ;"(20,16)"
        PSHC_01_1
        POPD_GX_1       plc_digdir_7

        bp              11   ;"(21,16)"
        PSHC_00_1
        POPD_GX_1       plc_digdir_8

        bp              12   ;"(24,18)"
        PSHC_VV_16      uint#16#2
        POPD_GX_16      plc_aninconf_1

        bp              13   ;"(25,18)"
        PSHC_VV_16      uint#16#2
        POPD_GX_16      plc_aninconf_2

        bp              14   ;"(26,19)"
        PSHC_VV_16      uint#16#2
        POPD_GX_16      plc_anoutconf_1

        bp              15   ;"(28,9)"
        PSHC_00_1
        POPD_IN_1       first

    :@L1  ;end_if

    bp              16   ;"(32,2)"
    PSHC_01_1
    POPO_IN_1       timer offsetof(ton,in)
    PSHC_VV_32      t#1000ms
    POPO_IN_32      timer offsetof(ton,pt)
    CALB_SN         fbid(ton) timer

    bp              17   ;"(33,14)"
    PSHD_GI_16      plc_anin_1
    PSHD_GI_16      plc_anin_2
    add_int         
    PSHC_VV_16      int#2
    div_int         
    PSHC_VV_16      int#10
    div_int         
    POPD_GX_16      plc_anout_1

    bp              18   ;"(34,2)"
    PSHO_IN_1       timer offsetof(ton,q)
    jmpcn           @L3  ;to end_if
        bp              19   ;"(35,8)"
        PSHD_IN_1       flip
        not_bool        
        POPD_IN_1       flip

        bp              20   ;"(36,16)"
        PSHD_IN_1       flip
        POPD_GX_1       plc_digout_7

        bp              21   ;"(37,3)"
        PSHC_00_1
        POPO_IN_1       timer offsetof(ton,in)
        CALB_SN         fbid(ton) timer

    :@L3  ;end_if

    :@__end
    bp              1   ;"(40,1)"
    RETN
.end


